@model FileSharingApp.Models.InputFile

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>UploadViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <div class="input-group mb-3">
                    <div class="custom-file">
                        <input asp-for="File" onchange="chooseFile()" type="file" class="custom-file-input" id="customFile">
                        <label class="custom-file-label" id="custom-file-label" for="customFile">Choose file</label>
                        <span asp-validation-for="File" class="text-danger"></span>
                    </div>
                </div>
            </div>
            @*<div class="form-group">
                <label asp-for="File" class="control-label"></label>
                <input asp-for="File" class="form-control" type="file" />
                <span asp-validation-for="File" class="text-danger"></span>
            </div>*@
            <div class="form-group d-inline">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div> | 
            <div class="form-group d-inline">
                <a class="btn btn-info" href="/Uploads/">Back To List</a>
            </div>
        </form>
    </div>
</div>

@*<div>
    <a asp-action="Index">Back to List</a>
</div>*@

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>

        function chooseFile() {
            var customFileInput = document.getElementById("customFile");
            var name = customFileInput.files.length > 0 ? customFileInput.files[0].name : 'Choose File';
            document.getElementById("custom-file-label").innerHTML = name;
        }

    </script>
}
